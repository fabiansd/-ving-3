package main

import (
    "fmt"
    "net"
    "os"
    "time"
    "strconv"
)

/* A Simple function to verify error */
func CheckError(err error) {
    if err  != nil {
        fmt.Println("Error: " , err)
        os.Exit(0)
    }
}

func sender(port int){
    ServerAddr, err := net.ResolveUDPAddr("udp","129.241.187.23:" + strconv.Itoa(port))
    CheckError(err)

    ServerConn, err := net.DialUDP("udp", nil, ServerAddr)
    CheckError(err)

    for {
    	ServerConn.Write([]byte("I am the liquor, Randy!"))
        time.Sleep(time.Second*1)
    }
}

func receiver(port int){
/* Preparing an address at port 30000*/ 
    ServerAddr, err := net.ResolveUDPAddr("udp",":" + strconv.Itoa(port))
    CheckError(err)

    /* Listening at selected port */

    ServerConn, err := net.ListenUDP("udp", ServerAddr)
    CheckError(err)

    //defer ServerConn.Close()

    buf := make([]byte, 1024)

    for {
        n,addr,err := ServerConn.ReadFromUDP(buf)
        fmt.Println("Received ",string(buf[0:n]), " from ",addr)
        
        if err != nil {
            fmt.Println("Error: ",err)
        } 
    }

}

func main() {

	go sender(20001)
	//go receiver(30000)
	//go receiver(20003)
	go receiver(20001)
	


	select{}

}

next file

package main
import (
    "fmt"
    "net"
    "os"
    //"time"
    "strconv"
    "bufio"
)

/* A Simple function to verify error */
func CheckError(err error) {
    if err  != nil {
        fmt.Println("Error: " , err)
        os.Exit(0)
    }
}


func main() {

    ServerAddrUs, _ := net.ResolveUDPAddr("udp","129.241.187.23:33546")
    ServerAddrThem, _ := net.ResolveUDPAddr("udp","129.241.187.146:33546")
    conn, _ := net.Dial("tcp", ServerAddrUs, ServerAddrThem)

    buf := make([]byte, 1024)
    conn.read(buf)
    fmt.Println(strconv.Itoa(buf))

    //conn.write([] byte, "ricky" \0)

    for {
        
    }

    

    

/*

    for {
        // read in input from stdin
        reader := bufio.NewReader(os.Stdin)
        fmt.Print("Text to send: ")
        text, _ := reader.ReadString('\n')

        // send to socket
        fmt.Fprintf(conn, text + "\n")

        // listen for reply
        message, _ := bufio.NewReader(conn).ReadString('\n')
        fmt.Print("Message from server: "+message)
    }*/

}
